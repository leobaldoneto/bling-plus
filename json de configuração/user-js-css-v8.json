{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"}],"settings":{"badgeCounter":false,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/tomorrow_night","useSoftTabs":false,"useWorker":true,"wrap":true},"supportBtn":false,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":"","css":"","id":"*bling.com.br*pdv.php","js":"// Imprime NFC-e automaticamente após envio.\nsetInterval(function(){\n\tlet button = document.querySelector(\".act-print-invoice\");\n\tbutton.click();\n}, 400);","libs":[],"name":"Frente de Caixa","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"*bling.com.br*produtos.php*","js":"// Captura o botão de adicionar variação e adiciona o atalho no final.\nlet addVariationButton = document.getElementById('aNovaLinhaItemVariacao');\naddVariationButton.innerText += ' (Alt + Z)';\n\n// Grade padrão para a variação 'Tamanho:'\nlet grade = ['34','36','38','40','42','44','46',\n\t\t\t'48','49','50','52','54','56','P','M',\n\t\t\t'G','GG','G1','G2','G3'];\n\t\t\t\n// Variação padrão que é adicionada após utilizar o atalho de adição de variações.\nlet defaultVariationString = 'Tamanho:';\n\n// Quando uma tecla é pressionada\ndocument.addEventListener('keydown', (e) => {\n\t// Encontra a tab variações\n\tlet variationTab = document\n\t\t\t\t\t\t.querySelector('li[data-tab=\"div_variacao\"]')\n\t\t\t\t\t\t.firstElementChild;\n\n\t// Se Tecla ALT+Z e aba variações está ativa\t\t\t\t\t\n\tif (e.code === \"KeyZ\" && \n\t\te.altKey === true && \n\t\te.repeat === false && \n\t\tvariationTab.className === 'active')\n\t{\n\t\t// encontra a última linha de variação adicionada\n\t\tlet newVariationInput = document.getElementById('variacao');\n\t\t\n\t\t// se a linha já possui valor defaultVariationString\n\t\tif (newVariationInput.value === defaultVariationString){\n\t\t\t\n\t\t\t// captura string da última variação cadastrada\n\t\t\tlet lastVariationString = newVariationInput\n\t\t\t.parentElement\n\t\t\t.parentElement\n\t\t\t.previousElementSibling\n\t\t\t.querySelector('[data-field=\"nomeVariacao\"]')\n\t\t\t.firstElementChild\n\t\t\t.innerText;\n\t\t\t\n\t\t\t// captura string após defaultVariationString\n\t\t\tlastVariationSizeString = lastVariationString.substring(defaultVariationString.length);\n\t\t\t\n\t\t\t// qual o próximo tamanho no array 'grade'?\n\t\t\tlet nextVariationSizeString = getNextVariationSize(lastVariationSizeString);\n\t\t\t\n\t\t\t// Concatena o próximo elemento do array na nova variação\n\t\t\tnewVariationInput.value += nextVariationSizeString;\n\t\t}\n\t\t\n\t\t// clica em adicionar variação\n\t\taddVariationButton.click();\n\t\t\n\t\t// encontra a última linha de variação adicionada\n\t\tnewVariationInput = document.getElementById('variacao');\n\t\t\n\t\t// aplica valor defaultVariationString no campo descrição da variação\n\t\tnewVariationInput.value = defaultVariationString;\n\t\t\n\t\t// Se pressionada CTRL+S, salva produto aberto.\n\t\t// verifica se tela de edição está aberta.\n\t} else if (e.code === \"KeyS\" && \n\t\t\t\te.ctrlKey === true && \n\t\t\t\te.repeat === false && \n\t\t\t\tgetDisplayStatusById('edicao') === 'block')\n\t{\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tdocument.getElementById('botaoSalvar').click();\n\t}\n});\n\n// Verifica quem é o próximo tamanho no array 'grade'\nlet getNextVariationSize = function (lastVariationSizeString) {\n\tlet index = grade.findIndex( (size, index, array) => {\n\t\treturn size == lastVariationSizeString;\n\t});\n\t\n\treturn grade[index + 1];\n};\n\n// Adiciona valores padrões para campos que sempre são iguais.\n//\n// *Valores setados*\n// Unidade: UN\n//\n// Evento ao mudar o foco do cursor\ndocument.addEventListener('focusin', (e) => {\n\t// Testa se o novo foco está na descrição do cadastro de um produto.\n\t// Dessa forma posso identificar se abri um cadastro\n\tif (e.target.id === 'nome') {\n\t\tlet unitInput = document.getElementById('unidade');\n\t\tif (unitInput.value !== 'UN'){\n\t\t\tunitInput.value = 'UN';\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/*\n\t\t// clona input de preço\n\t\tlet priceInput = document.querySelector('.preco-venda-atributo-produto');\n\t\tlet clone = priceInput.cloneNode(true);\n\t\tconsole.log(clone);\n\t\tlet divDadosGerais = document.querySelector('[data-content=\"div_dados_gerais\"]');\n\t\tconsole.log(divDadosGerais);\n\t\tdivDadosGerais.insertBefore(clone, priceInput.nextSibling);\n\t\t*/\n\t}\n});\nconsole.log('cheguei aqui');\n\nlet getDisplayStatusById = function (id) {\n\tlet element = document.getElementById(id);\n\tlet style = getComputedStyle(element);\n\treturn style.display;\n}","libs":[],"name":"Produtos","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"*bling.com.br*pedidos.compra.php*","js":"document.addEventListener('keydown', (e) => {\n\tif (e.code === \"KeyX\" && \n\te.altKey === true && \n\te.repeat === false && \n\tgetDisplayStatusById('edicao') === 'block') {\n\t\t// pegar valores da lista\n\t\tlet productAutoComplete = document.getElementById('ui-id-5')\n\t\tlet productsCollection = productAutoComplete.children;\n\t\tlet productsSkuArray = [];\n\t\t\n\t\tfor (i = 0; i < productsCollection.length; i++) {\n\t\t\tlet codString = productsCollection[i] // li\n\t\t\t.firstChild // a\n\t\t\t.firstChild // div\n\t\t\t.lastChild // span\n\t\t\t.innerText;\n\t\t\t\n\t\t\tproductsSkuArray[i] = codString.slice(codString.length - 13);\n\t\t}\n\t\tconsole.log(productsSkuArray);\n\t\t\n\t\t//entrar em um loop\n\t\tproductsSkuArray.forEach( (sku) => {\n\t\t\tdocument.activeElement.value = sku;\n\t\t\tproductAutoComplete.firstChild.click();\n\t\t\tdocument.getElementById('aNovaLinhaItem').click();\n\t\t});\n\t\t\n\t\t// clicar no próximo elemento\n\t\t\n\t\t// adicionar linha\n\t\t\n\t\t// escrever valor do próximo\n\t\t\n\t\t// clicar no próximo.\n\t}\n});\n\t\t\nlet getDisplayStatusById = function (id) {\n\tlet element = document.getElementById(id);\n\tlet style = getComputedStyle(element);\n\treturn style.display;\n}\n\nconst delayMs = ms => new Promise(res => setTimeout(res, ms));\n\nconsole.log('injetado');","libs":[],"name":"Pedidos de Compra","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}}]}